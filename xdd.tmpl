// Code generated. DO NOT EDIT.

package main

import (

	"math/big"

	"github.com/ethereum/go-ethereum/common"
	"github.com/DIMO-Network/model-garage/pkg/cloudevent"
	"github.com/DIMO-Network/logswitch/pkg/event"
)

{{ range . }}
type {{ .Name }} struct {
	{{- range .Arguments }}
	{{ .GoName }} {{ .GoType }} `json:"{{ .SolidityName }}"`
	{{- end }}
}
{{ end }}

var (
	{{ range . -}}
	{{ .Name }}ID = common.HexToHash("{{ .ID }}")
	{{ end }}
)

func ProcessEvent(ce *cloudevent.CloudEvent[event.Data[json.RawMessage]]) error {
	switch ce.EventSignature {
	{{ range . -}}
	case {{ .Name }}ID:
		out := &cloudevent.CloudEvent[event.Data[{{ .Name }}]]{
			CloudEventHeader: ce.CloudEventHeader,
		}
		if err := json.Unmarshal(ce.Data.Arguments, &out.Data.Arguments); err != nil {
			return err
		}
		return Handle{{ .Name }}(out)
	{{ end -}}
	}
}

{{ range . }}
func Handle{{ .Name }}(ced *cloudevent.CloudEvent[{{ .Name }}]) error {
	println("xpp")
}
{{ end }}